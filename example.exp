# By beginning a line with a '#',  you create a comment.
# Comments are ignored by the program, and are for the user's convenience.

# All data about the experiment file follows this syntax: data-key: data-value;
# Where 'data-key' names what data is being defined, and 'data-value' refers
#     to the content of this data.
# For data-values that are numbers, there is a lot of freedom.
# A number can be described using the following syntax, where parenthesis
#     surround mandatory components, curly braces surround characters that
#     separate components, and square braces surround optional components.
#   [sign](whole){.}[decimal]{e or E}[power] [prefix](unit)
# The prefix component is a single character directly preceding a unit that
#     multiplies the data-value following the metric prefix multipliers:
#   - P, "peta": 10^15
#   - T, "tera": 10^12
#   - G, "giga": 10^9
#   - M, "mega": 10^6
#   - k, "kilo": 10^3
#   - h, "hecto": 10^2
#   - d, "deci": 10^-1
#   - c, "centi": 10^-2
#   - m, "milli": 10^-3
#   - u, "micro": 10^-6
#   - n, "nano": 10^-9
#   - p, "pico": 10^-12
#   - f, "femto": 10^-15
# Examples:
#   -1.01e7 ms
#   +1.02e-5Ps
#   1e100 fs
#   ...
# Units differ depending on the data-key that you are entering a value for.

# title: sets the experiment's title. No unit, this is a text value.
title: Example Experiment;

# delta: sets the delta-time for this experiment. Unit: 's', seconds.
delta: 1ms;

# limit: the number of frames that will be simulated. Unit: 'fr.', frames.
# A frame is a moment in time that contains information about objects'
#     locations, velocities, accelerations, etc..
# Every frame differs in time with respect to the delta-time.
limit: 10fr.;

# system: lists the objects in this experiment and their starting values.
# Every line corresponds to an object.
# Each member of a line, separated by a comma, refers to a specific piece
#     of information about that object.
# The system is terminated by the last line ending with a semicolon.
# The members are ordered as follows:
#   location-x, location-y, velocity-x, velocity-y,   charge,     mass
#   'm'         'm'         'm/s'       'm/s'         'e', or 'C' 'g'
# The units are metre, metres per second, either the elementary charge or
#     Coulombs, and grams, respectively.
# For charge and mass, constants are available for specific applications.
# For charge:
#   - e, "elementary charge": EC in qsim.h.
#   - na, "not applicable": 0.
# For mass:
#   - pm, "proton mass": PM in qsim.h.
#   - nm, "neutron mass": NM in qsim.h.
#   - em, "electron mass": EM in qsim.h.
#   - na, "not applicable": 0.
# After the first colon, a new line should be entered.
system:
-1m, 0m, 0m/s, 0m/s, +e, pm  # Proton
1m,  0m, 0m/s, 0m/s, -e, em; # Electron
